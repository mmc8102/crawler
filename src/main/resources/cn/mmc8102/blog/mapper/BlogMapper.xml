<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mmc8102.blog.mapper.BlogMapper" >
  <resultMap id="BaseResultMap" type="cn.mmc8102.blog.domain.Blog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="key_word" property="keyWord" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="read_count" property="readCount" jdbcType="INTEGER" />
    <result column="reply_count" property="replyCount" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="release_time" property="releaseTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <association property="blogType" javaType="cn.mmc8102.blog.domain.BlogType" columnPrefix="bt_">
      <id column="id" property="id"/>
      <result column="type_name" property="typeName"/>
    </association>
  </resultMap>

  <sql id="baseColumn">
    id, title, summary, content, key_word, status, url, type_id, read_count, reply_count, release_time, create_time, update_time
  </sql>

  <sql id="where_sql">
    <where>

      <if test="keyWord!=null">
         AND title LIKE concat('%',#{keyWord},'%')
      </if>
      <if test="status>0">
        AND status = 0 ORDER BY release_time DESC
      </if>
      <if test="status==0">
        AND status >= 0 ORDER BY create_time DESC
      </if>
    </where>
  </sql>


  <select id="queryForCount" resultType="int">
    select COUNT(id) FROM blog
    <include refid="where_sql"/>
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
    select <include refid="baseColumn"/>
    from blog
    <include refid="where_sql"/>
    <if test="page!=null">
      limit #{start}, #{rows}
    </if>
  </select>

  <select id="queryById" resultMap="BaseResultMap">
    select b.id, title, summary, content, key_word, status, url, type_id, read_count, reply_count, release_time, create_time, update_time,
        bt.id as bt_id, bt.type_name as bt_type_name
    from blog b left join blogtype bt on b.type_id = bt.id
    where b.id = #{id}
  </select>

  <update id="updateReadCount">
    update blog set read_count = read_count + 1 where id = #{id}
  </update>
</mapper>